import type { Auth } from "lucia";
import type { OAuthConfig } from "../core.js";
type Config = OAuthConfig & {
    redirectUri: string;
};
export declare const discord: <_Auth extends Auth<any>>(auth: _Auth, config: Config) => {
    readonly getAuthorizationUrl: () => Promise<[URL, string]>;
    readonly validateCallback: (code: string) => Promise<{
        discordUser: DiscordUser;
        discordTokens: {
            accessToken: string;
            refreshToken: string;
            accessTokenExpiresIn: number;
        };
        existingUser: Awaited<Awaited<ReturnType<_Auth["getUser"]>>> | null;
        createKey: (userId: string) => Promise<Readonly<{
            userId: string;
            providerId: string;
            providerUserId: string;
            passwordDefined: boolean;
        }>>;
        createUser: (options: {
            userId?: string | undefined;
            attributes: import("../lucia.js").CreateUserAttributesParameter<_Auth>;
        }) => Promise<Awaited<ReturnType<_Auth["getUser"]>>>;
    }>;
};
export type DiscordUser = {
    id: string;
    username: string;
    discriminator: string;
    avatar: string;
    bot?: boolean;
    system?: boolean;
    mfa_enabled?: boolean;
    verified?: boolean;
    email?: string;
    flags?: number;
    banner?: string;
    accent_color?: number;
    premium_type?: number;
    public_flags?: number;
    locale?: string;
};
export {};
